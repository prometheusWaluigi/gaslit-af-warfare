version: '3.8'

services:
  # Main application
  app:
    build: .
    container_name: gaslit-af-warstack
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./results:/app/results
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./data:/app/data
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=gaslit-af-warstack-production-key
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/gaslit_af
    depends_on:
      - db
      - nginx
    networks:
      - gaslit-network

  # Database
  db:
    image: postgres:14-alpine
    container_name: gaslit-af-db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=gaslit_af
    ports:
      - "5432:5432"
    networks:
      - gaslit-network

  # Web server
  nginx:
    image: nginx:alpine
    container_name: gaslit-af-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/app/static
    networks:
      - gaslit-network

  # Jupyter notebook for data analysis (optional)
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gaslit-af-jupyter
    command: jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
    ports:
      - "8888:8888"
    volumes:
      - .:/app
    environment:
      - JUPYTER_ENABLE_LAB=yes
    networks:
      - gaslit-network

networks:
  gaslit-network:
    driver: bridge

volumes:
  postgres_data:
